{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Parameters":{
      "KeyName":{
        "Type":"AWS::EC2::KeyPair::KeyName",
        "Description":"Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.",
        "AllowedValues": "saini"
      },
      "VpcId":{
        "Type":"AWS::EC2::VPC::Id",
        "Description":"Select a VPC that allows instances to access the Internet.",
        "AllowedValues": "vpc-007fc05093485e7e6"
      },
      "SubnetId":{
        "Type":"List<AWS::EC2::Subnet::Id>",
        "Description":"Select at two subnets in your selected VPC.",
        "AllowedValues": "[subnet-0c995c77750f1a898, subnet-0156d2677c8e96a27]"
      },
      "DesiredCapacity":{
        "Type":"Number",
        "Default":"1",
        "Description":"Number of instances to launch in your ECS cluster."
      },
      "MaxSize":{
        "Type":"Number",
        "Default":"1",
        "Description":"Maximum number of instances that can be launched in your ECS cluster."
      },
      "InstanceType":{
        "Description":"EC2 instance type",
        "Type":"String",
        "Default":"t2.micro",
        "AllowedValues":[
          "t2.micro"
        ],
        "ConstraintDescription":"EC2"
      }
    },
    "Mappings":{
      "AWSRegionToAMI":{
        "us-east-1":{
          "AMIID":"ami-5253c32d"
        }
      }
    },
    "Resources":{
      "ECSCluster":{
        "Type":"AWS::ECS::Cluster"
      },
      "EcsSecurityGroup":{
        "Type":"AWS::EC2::SecurityGroup",
        "Properties":{
          "GroupDescription":"ECS Security Group",
          "VpcId":{
            "Ref":"VpcId"
          }
        }
      },
      "EcsSecurityGroupHTTPinbound":{
        "Type":"AWS::EC2::SecurityGroupIngress",
        "Properties":{
          "GroupId":{
            "Ref":"EcsSecurityGroup"
          },
          "IpProtocol":"tcp",
          "FromPort":"8080",
          "ToPort":"8080",
          "CidrIp":"0.0.0.0/0"
        }
      },
      "EcsSecurityGroupSSHinbound":{
        "Type":"AWS::EC2::SecurityGroupIngress",
        "Properties":{
          "GroupId":{
            "Ref":"EcsSecurityGroup"
          },
          "IpProtocol":"tcp",
          "FromPort":"22",
          "ToPort":"22",
          "CidrIp":"0.0.0.0/0"
        }
      },
      "EcsSecurityGroupSSHinbound":{
        "Type":"AWS::EC2::SecurityGroupIngress",
        "Properties":{
          "GroupId":{
            "Ref":"EcsSecurityGroup"
          },
          "IpProtocol":"tcp",
          "FromPort":"8000",
          "ToPort":"8000",
          "CidrIp":"0.0.0.0/0"
        }
      },
      "EcsSecurityGroupSSHinbound":{
        "Type":"AWS::EC2::SecurityGroupIngress",
        "Properties":{
          "GroupId":{
            "Ref":"EcsSecurityGroup"
          },
          "IpProtocol":"tcp",
          "FromPort":"443",
          "ToPort":"443",
          "CidrIp":"0.0.0.0/0"
        }
      },
      "EcsSecurityGroupALBports":{
        "Type":"AWS::EC2::SecurityGroupIngress",
        "Properties":{
          "GroupId":{
            "Ref":"EcsSecurityGroup"
          },
          "IpProtocol":"tcp",
          "FromPort":"8000",
          "ToPort":"8000",
          "SourceSecurityGroupId":{
            "Ref":"EcsSecurityGroup"
          }
        }
      },
      "CloudwatchLogsGroup":{
        "Type":"AWS::Logs::LogGroup",
        "Properties":{
          "LogGroupName":{
            "Fn::Join":[
              "-",
              [
                "ECSLogGroup",
                {
                  "Ref":"AWS::StackName"
                }
              ]
            ]
          },
          "RetentionInDays":14
        }
      },
      "taskdefinition":{
        "Type":"AWS::ECS::TaskDefinition",
        "Properties":{
          "Family":{
            "Fn::Join":[
              "",
              [
                {
                  "Ref":"AWS::StackName"
                },
                "move-ecs"
              ]
            ]
          },
          "ContainerDefinitions":[
            {
              "Name":"move-container",
              "Cpu":"10",
              "Essential":"true",
              "Image":"move-repo:latest",
              "Memory":"300",
              "LogConfiguration":{
                "LogDriver":"awslogs",
                "Options":{
                  "awslogs-group":{
                    "Ref":"CloudwatchLogsGroup"
                  },
                  "awslogs-region":{
                    "Ref":"AWS::Region"
                  },
                  "awslogs-stream-prefix":"move-ecs"
                }
              },
              "PortMappings":[
                {
                  "ContainerPort":8000
                }
              ]
            }
          ]
        }
      },
      "ECSAutoScalingGroup":{
        "Type":"AWS::AutoScaling::AutoScalingGroup",
        "Properties":{
          "VPCZoneIdentifier":{
            "Ref":"SubnetId"
          },
          "LaunchConfigurationName":{
            "Ref":"ContainerInstances"
          },
          "MinSize":"1",
          "MaxSize":{
            "Ref":"MaxSize"
          },
          "DesiredCapacity":{
            "Ref":"DesiredCapacity"
          }
        },
        "CreationPolicy":{
          "ResourceSignal":{
            "Timeout":"PT15M"
          }
        },
        "UpdatePolicy":{
          "AutoScalingReplacingUpdate":{
            "WillReplace":"true"
          }
        }
      },
      "ContainerInstances":{
        "Type":"AWS::AutoScaling::LaunchConfiguration",
        "Properties":{
          "ImageId":{
            "Fn::FindInMap":[
              "AWSRegionToAMI",
              {
                "Ref":"AWS::Region"
              },
              "AMIID"
            ]
          },
          "SecurityGroups":[
            {
              "Ref":"EcsSecurityGroup"
            }
          ],
          "InstanceType":{
            "Ref":"InstanceType"
          },
          "IamInstanceProfile":{
            "Ref":"EC2InstanceProfile"
          },
          "KeyName":{
            "Ref":"KeyName"
          },
          "UserData":{
            "Fn::Base64":{
              "Fn::Join":[
                "",
                [
                  "#!/bin/bash -xe\n",
                  "echo ECS_CLUSTER=",
                  {
                    "Ref":"ECSCluster"
                  },
                  " >> /etc/ecs/ecs.config\n",
                  "yum install -y aws-cfn-bootstrap\n",
                  "/opt/aws/bin/cfn-signal -e $? ",
                  "         --stack ",
                  {
                    "Ref":"AWS::StackName"
                  },
                  "         --resource ECSAutoScalingGroup ",
                  "         --region ",
                  {
                    "Ref":"AWS::Region"
                  },
                  "\n"
                ]
              ]
            }
          }
        }
      }
    },
    "Outputs":{
      "ecscluster":{
        "Value":{
          "Ref":"ECSCluster"
        }
      },
      "taskdef":{
        "Value":{
          "Ref":"taskdefinition"
        }
      }
    }
  }
